
import requests
from datetime import datetime, timedelta
import os
import json

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
USER_TOKEN = os.getenv("USER_TOKEN", "c4033acd6cf298f0c854a9e252ce6226")
PARTNER_TOKEN = os.getenv("PARTNER_TOKEN", "tdp3ectpmhn5xkghbwns")
X_PARTNER_ID = os.getenv("X_PARTNER_ID", "8463")

COMPANY_ID = int(os.getenv("COMPANY_ID", "1275464"))
DEFAULT_STAFF_ID = int(os.getenv("DEFAULT_STAFF_ID", "3813130"))
SERVICE_ID = int(os.getenv("SERVICE_ID", "19053129"))

def create_yclients_booking(name: str, phone: str, date: str, time: str, staff_id: int = DEFAULT_STAFF_ID) -> dict:
    datetime_start = f"{date}T{time}:00"
    start_dt = datetime.strptime(datetime_start, "%Y-%m-%dT%H:%M:%S")
    end_dt = start_dt + timedelta(minutes=90)

    payload = {
        "staff_id": staff_id,
        "services": [{"id": SERVICE_ID}],
        "datetime": datetime_start,
        "seance_length": 90 * 60,
        "client": {
            "name": name,
            "phone": phone
        },
        "send_sms": True
    }

    headers = {
        "Authorization": f"Bearer {PARTNER_TOKEN}, User {USER_TOKEN}",
        "Content-Type": "application/json",
        "Accept": "application/vnd.yclients.v2+json",
        "User-Agent": "bot_boats",
        "X-Partner-Id": X_PARTNER_ID
    }

    print("="*50)
    print("‚û°Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏:", json.dumps(headers, ensure_ascii=False, indent=2))
    print("üì¶ Payload:", json.dumps(payload, ensure_ascii=False, indent=2))

    url = f"https://api.yclients.com/api/v1/records/{COMPANY_ID}"
    try:
        response = requests.post(url, json=payload, headers=headers)
        print("üì¨ HTTP:", response.status_code)
        print("üì® –û—Ç–≤–µ—Ç –æ—Ç YCLIENTS:", response.text)

        if response.status_code == 200:
            print("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
            return response.json()
        elif response.status_code == 401:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ 401 Unauthorized.")
            print("üß© –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ user_token + partner_token + X-Partner-Id.")
        elif response.status_code == 403:
            print("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ —É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        elif response.status_code == 422:
            print("üìõ –û—à–∏–±–∫–∞ 422: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ payload.")
        elif response.status_code >= 500:
            print("üî• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ YCLIENTS. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:", response.status_code, response.text)

    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")

    return {"success": False, "error": "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å"}
