
import requests
from datetime import datetime, timedelta
import os
import json

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã) ===
USER_TOKEN = os.getenv("USER_TOKEN", "c4033acd6cf298f0c854a9e252ce6226")

PARTNER_IDS_TO_TRY = [
    os.getenv("X_PARTNER_ID"),
    "8463",
    "18400",
    "1275464",
    os.getenv("COMPANY_ID"),
]

COMPANY_ID = int(os.getenv("COMPANY_ID", "1275464"))
DEFAULT_STAFF_ID = int(os.getenv("DEFAULT_STAFF_ID", "3813130"))
SERVICE_ID = int(os.getenv("SERVICE_ID", "19053129"))

def create_yclients_booking(name: str, phone: str, date: str, time: str, staff_id: int = DEFAULT_STAFF_ID) -> dict:
    datetime_start = f"{date}T{time}:00"
    start_dt = datetime.strptime(datetime_start, "%Y-%m-%dT%H:%M:%S")
    end_dt = start_dt + timedelta(minutes=90)

    payload = {
        "staff_id": staff_id,
        "services": [{"id": SERVICE_ID}],
        "datetime": datetime_start,
        "seance_length": 90 * 60,
        "client": {
            "name": name,
            "phone": phone
        },
        "send_sms": True
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏
    if not USER_TOKEN or len(USER_TOKEN) < 10:
        print("‚ùå USER_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–π.")
        return {"success": False, "error": "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π user_token"}

    for partner_id in PARTNER_IDS_TO_TRY:
        if not partner_id:
            continue

        headers = {
            "Authorization": f"Bearer {USER_TOKEN}",
            "Content-Type": "application/json",
            "Accept": "application/vnd.yclients.v2+json",
            "User-Agent": "bot_boats",
            "X-Partner-Id": str(partner_id)
        }

        print("="*50)
        print(f"üîÅ –ü—Ä–æ–±—É–µ–º X-Partner-Id = {partner_id}")
        print("‚û°Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏:", json.dumps(headers, ensure_ascii=False, indent=2))
        print("üì¶ Payload:", json.dumps(payload, ensure_ascii=False, indent=2))

        url = f"https://api.yclients.com/api/v1/records/{COMPANY_ID}"
        try:
            response = requests.post(url, json=payload, headers=headers)
            print("üì¨ HTTP:", response.status_code)
            print("üì® –û—Ç–≤–µ—Ç –æ—Ç YCLIENTS:", response.text)

            if response.status_code == 200:
                print("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
                return response.json()

            elif response.status_code == 401:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ 401 Unauthorized.")
                if "–ø–∞—Ä—Ç–Ω–µ—Ä" in response.text.lower():
                    print("üß© –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–æ–∑–º–æ–∂–Ω–æ, X-Partner-Id –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ user_token.")
                elif "token" in response.text.lower():
                    print("üîê –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–æ–∑–º–æ–∂–Ω–æ, user_token —É—Å—Ç–∞—Ä–µ–ª –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é.")
                else:
                    print("üß† –ü—Ä–æ—á–µ–µ: –≤–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ ‚Äî –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–≥–æ ID.")

            elif response.status_code == 403:
                print("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ —É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

            elif response.status_code == 422:
                print("üìõ –û—à–∏–±–∫–∞ 422: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ payload.")

            elif response.status_code >= 500:
                print("üî• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ YCLIENTS. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

            else:
                print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:", response.status_code, response.text)

        except Exception as e:
            print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")

    print("‚ùå –í—Å–µ X-Partner-Id –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚Äî –Ω–µ—É–¥–∞—á–∞.")
    return {"success": False, "error": "X-Partner-Id validation failed"}
