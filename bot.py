# bot.py
from telegram.ext import Application, CommandHandler, CallbackQueryHandler
from handlers.button_handler import (
    start_handler, faq_handler, help_handler,
    callback_handler, boat_handler, register_admin, conv_handler, cancel
)
import os
from handlers.button_handler import start_quiz, handle_quiz_answer
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from bookings_storage import delete_booking
from handlers.utils import load_admins
import json
from telegram.ext import MessageHandler, filters
from qa_service import answer_question
TOKEN = "7933616069:AAE1rIpYDIehi3h5gYFU7UQizeYhCifbFRk"
if not TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")

application = Application.builder().token(TOKEN).build()
async def web_app_data_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = json.loads(update.message.web_app_data.data)  # {"boat": "blue"}
    boat = data.get("boat")
    await update.message.reply_text(f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ª–æ–¥–∫—É: {boat.capitalize()}")
# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
# ========================================
# QA: –≤—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
# ========================================
async def qa_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ –≤ user_data
    context.user_data["qa_mode"] = True
    await query.edit_message_text(
        "ü§ñ –í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å."
    )

async def qa_handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("qa_mode"):
        return  # –ø–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º

    question = update.message.text
    answer, score = answer_question(question)
    await update.message.reply_text(f"–û—Ç–≤–µ—Ç: {answer}\n(—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {score:.2f})")
    # –ø–æ –∂–µ–ª–∞–Ω–∏—é: —É–±—Ä–∞—Ç—å —Ñ–ª–∞–≥ –∏ –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    # context.user_data.pop("qa_mode", None)

async def handle_approval(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    action, user_id_str = data.split("-")
    user_id = int(user_id_str)
    admins = load_admins()

    if update.effective_user.id not in admins:
        await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.")
        return
    message_id = context.bot_data.get(f"booking_msg_id-{user_id}")

    if action == "approve":
        await context.bot.send_message(
            chat_id=user_id,
            text="‚úÖ –í–∞—à–∞ –±—Ä–æ–Ω—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await query.edit_message_text("‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.")
    elif action == "reject":
        await context.bot.send_message(
            chat_id=user_id,
            text="‚ùå –í–∞—à–∞ –±—Ä–æ–Ω—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await query.edit_message_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        delete_booking(user_id)


    context.bot_data.pop(f"pending-{user_id}", None)
    context.bot_data.pop(f"booking_msg_id-{user_id}", None)

async def get_file_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.photo:
        photo = update.message.photo[-1]  # –°–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        await update.message.reply_text(f"üìé File ID: {photo.file_id}")
application.add_handler(CallbackQueryHandler(handle_approval, pattern=r"^(approve|reject)-\d+$"))
# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è QA-—Ä–µ–∂–∏–º–∞
application.add_handler(
    CallbackQueryHandler(qa_start, pattern="^qa_start$")
)
# –ø–µ—Ä–µ—Ö–≤–∞—Ç –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ QA-—Ä–µ–∂–∏–º–µ
from telegram.ext import filters, MessageHandler
application.add_handler(
    MessageHandler(filters.TEXT & ~filters.COMMAND, qa_handle_message)
)

application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data_handler))
application.add_handler(MessageHandler(filters.PHOTO, get_file_id))
application.add_handler(start_handler)
application.add_handler(boat_handler)
application.add_handler(faq_handler)
application.add_handler(help_handler)
application.add_handler(CommandHandler("register", register_admin))
application.add_handler(conv_handler)
application.add_handler(CommandHandler("start_quiz", start_quiz))
application.add_handler(CallbackQueryHandler(start_quiz, pattern="^start_quiz$"))
application.add_handler(CallbackQueryHandler(handle_quiz_answer, pattern=r"^quiz_\d+_\d+$"))
application.add_handler(CallbackQueryHandler(handle_approval, pattern=r"^(approve|reject)-\d+$"))
application.add_handler(callback_handler)  # <-- –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ